
수업 카페 링크

https://cafe.daum.net/hi20250131

======================================================

깃허브 링크 
- 자료 보관
- 팀 프로젝트

https://github.com/HwangSub/class1

======================================================

[ 자바 설치 ]

1. jdk 설치 - jdk -21 버전
2. eclipse 설치 - https://www.eclipse.org/

======================================================

[ 자바 설치 확인 ]

1. 폴더 확인 :: jdk -21 폴더 생성 확인
2. cmd 화면 :: java 명령어를 직접 실행

======================================================

c: /eclipse-workspace7

======================================================

1. 프로젝트 생성
   sample1

2. 패키지 생성
   study1

3. 자바파일 생성 (꼭 대문자)
   Test1
   - public static void main (체크)

======================================================

sample1 - src - html/css/javascript
            - package - java 파일들

======================================================

예) 네이버 프로젝트

naver - member 	- memberWrite.java
			- memberSave.java
        - board   	- boardWrite.java
			- boardSave.java


        - src		- member - memberWrite.html
			- images

======================================================

= (대입연산자)의 의미

1) 같다는 의미 X
2) 오른쪽의 값을 왼쪽의 변수명으로 넘긴다는 의미

======================================================

주석
/**/ 엔터 -> 초록색
/** 엔터 -> 파란색

======================================================

* 변수 *
- 숫자 타입은 int
- 문자 타입은 String ( 참조형 변수 )


* 자료형 변수와 참조형 변수 (주요 메모리, 보조 메모리) *
- String 변수는 용량이 크기 때문에 주요 메모리에 담으면 오류가 날 수 있음
- String에 있는 위치를 참조해서 데이터를 불러온 후 보여주기 때문에 참조 변수라고 함 

======================================================

[ 메모리 ]

* 객체 :  메모리에 올라가 있는 프로그램

1. 자바에서의 객체 : 메모리에 올라가 있는 클래스
2. 만드는 방법 : new 클래스

======================================================

(1) git 허브
- 리눅스 회사에서 제공홰주는 웹으로 운영되는 저장(공간) 프로그램
- 전세계 누구나 사용 가능한 프로그램
=> 윈도우(유료), 리눅스(무료), 맥킨토시(유료)

(2) 웹하드(유료) - only 개인
- (공인된서버)의 일부 공간을 제공하여 사용자에게 제공해주는 사이트

(3) git	:: 프로젝트용 프로그램
    svn	:: 프로젝트용 프로그램

======================================================

* 전체 get, set 코드 생성 *
- 마우스 우클릭 - > Source -> Generate Getters and Setters

======================================================

(상속)
- 상속 설정은 자식클래스에서 행함 ( extends )
- 상속 설정을 부모클래스는 모름    ( 상속관련 설정 없음 )
 
부모클래스 / 자식클래스
상위클래스 / 하위클래스
슈퍼클래스 / 지식클래스
   (super)	/     (this)

======================================================

정규표현식 -> 문자열의 오류 체크 ( 데이터의 유효성 체크 )

날짜 -> unixTime ( 1970.1.1 0:0:0 )

객체지향
( 캡슐화, 상속, 다형성, 추상화 )  

Math / String 클래스

메소드
- ( return : int, String, int[ ] )

======================================================

함수
- ( return : 타입없음 )

======================================================

C	-> C++
	->JAVA / JSP / JAVASCRIPT
	-> PHP 

======================================================

File			-> 파일 이름, 크기, 생성일 ~
			-> 폴더의 내부 목록 확인

FileReader		-> 경로의 인스턴스 처리	-> 메모리

BufferedReader	-> readLine() 메소드
			-> 이미지파일 (X), 클래스 파일 (X)
			-> 텍스트성 파일 (O)
			-> null(값)
			->

======================================================

1. ArrayList		(현)	- DB 연결
2. Vector		(구)	
3. LinkedList	(미)	- 속도

- key 값 : auto
- key 값의 시작 번호는 0번으로 고정	- int
- 반복문 사용이 편리

4. HashMap
- key 값 : auto (x), 사용자 설정
- key 값은 숫자 및 문자(열) 가능
- 반복문 사용의 클래스(Iterator)

* 배열 - 일반

======================================================

스레드 클래그 - 멀티 태스킹 (여러 프로그램을 한꺼번에 실행)

======================================================

** 람다식 **
- 자바에서 함수를 만드는 기법
- 인터페이스 함수(라고 부름)
- 인터페이스 파일 + 자바 파일
 
- 메소드는 다른 클래스에서 호출이 가능
- 함수는 다른 클래스에서 호출이 불가능

======================================================

DataBase (프로그램) -> 데이터의 저장 - 테이블에 보관
	-> java, php, .net, c++, 파이선
	1. oracle		- 중/대형 -> 고가 -> 1카피 (5천)
	2. mysql		- 중/소형 -> 저가 -> 1카피 (몇십만원)
	3. db2		- 중/대형 -> 중가 : 오라클의 대항 (국산)
	4. maria-db		- mysql 직원들이 만듦 - 무료
	5. mssql		- 중/대형 -> 고가 : MS사에서 개발
	
	- asp 프로그램 -

======================================================

DataBase -> mysql	-> ( 쇼핑몰 )스키마 (DB) 		-> 테이블들 (상품, 회원, 구매 ...)
				-> ( 메일 시스템 )스키마 (DB)	-> 테이블들 (회원, 이메일 ...)
 
======================================================

MySQL 8.x

1. 작업툴 : Workbench
2. 스키마 : sample1 - 작업공간
3. 

{ cmd }

-> mysql 접속 명령어
mysql -uroot -p sample1


root (슈퍼유저) / 123456
-> mysql	(스키마)	- 관리자전용
-> sample1	(스키마)	- 일반사용자
------------------------------------------------------
1. 슈퍼 유저 - root		:: 일반유저생성, 일반스키마생성, 환경설정, 테이블생성
2. 일반 유저 - 일반사용자	:: 개발관련 테이블 생성 / 작업

------------------------------------------------------

======================================================

회원가입 / 게시판 / 공지사항

{ 테이블 }	-> member 테이블	-> 컬럼
		-> board 테이블

======================================================

(1) 테이블 생성	create table 테이블명
(2) 테이블 변경	alter table 테이블명
(3) 테이블 삭제 	drop table 테이블명
(4) 데이터 입력	insert into 테이블명
(5) 데이터 수정	update 테이블명
(6) 데이터 삭제 	delete from 테이블명

======================================================

{ 컬럼 타입 }	- java : byte < short < int < long

( 숫자 )
tinyint		-128 ~ 127			-> byte
smallint		-32000 ~ 32000		-> short
mediumint 		
int			-----> hot
bigint
------------------------------------------------------
float
double		-----> hot

---------------------------------------------------------------------------------------------------

( 문자 )		- char / String
(1)	char			- 255 byte
(2)	varchar		- 255 byte		-----> hot
(3)	tinytext		- 255 byte
(4)	text			- 6만 5천 byte	-----> hot
(5)	mediumtext		
(6)	longtext		

---------------------------------------------------------------------------------------------------

( 문자 - 이미지 )
(1) tinyblob
(2) blob

---------------------------------------------------------------------------------------------------

( 날짜 )
(1) date 		-> 날짜만 (시간 제외)	-> 생일
(2) datetime 	-> 날짜와 시간		-> 회원등록일

======================================================

MySQL command 

1. 암호 입력

2. use sample1

======================================================

물리적 백업	-> 테이블 관련 파일의 백업
논리적 백업	-> SQL 백업

======================================================

(MY)				(OR)
varchar - (65,000)		varchar2 - (4,000)
char(255)			char(2000)
longtext - (4G)		long - (2G)
date				date
datetime			timestamp
int				number
double			number(m,n)
			
======================================================

insert
insert
rollback	::  실행 취소
------------------------------------------------------
commit 이후로는 rollback 불가

insert
insert
commit	::  완전 적용
rollback	::  실행 내용 없음
------------------------------------------------------
insert
rollback	::  실행 취소
------------------------------------------------------
{트랜젝션}
commit과 commit 사이에 행하게 된 DML 명령(들)을 의미
------------------------------------------------------
insert		- commit, rollback
delete	- commit, rollback
update	- commit, rollback
------------------------------------------------------
create ( rollback 적용 X )
alert ( rollback 적용 X )
drop ( rollback 적용 X )
------------------------------------------------------
MySQL	:  auto commit;
Oracle	:  수동 commit;
------------------------------------------------------
insert -> 메모리 -> commit -> 

create table abc() --> abc 파일 생성
------------------------------------------------------
(로그인)
insert
update
insert
commit;	// 1번째 트랜젝션이 형성됨
delete
update
update
insert
insert	
commit;	// 2번째 트랜젝션이 형성됨
------------------------------------------------------
1. update
2. update
3. insert
insert
insert (비정상)
insert
insert
insert
insert
rollback 3;	// 3번까지 되돌림

======================================================

{ 트랜젝션 }

	{ 작업 }
	commit;	-- 1번째 트랜잭션 종료

	{ 작업(들) 	- data 관련 - insert, update, delete }
	commit;	-- 2번째 트랜잭션 종료

	{ 작업(들) }
	rollback;	-- 마지막 커밋까지의 실행 취소

	savepoint to 지점명1;
	{ 작업1 }
	savepoint to 지점명2;
	{ 작업2 }
	rollback 지점명2;	-- 설정된 지점명까지의 실행 취소

======================================================

insert / update / delete -> DML -> 메모리에 1차 저장 -> commit -> 물리적 파일에 저장

create table -> 물리적 파일 생성

======================================================

to_char( 날짜, 형식 ) : 날짜 타입 -> 문자 타입으로 변환
to_char( 숫자, 형식 ) : 숫자 타입 -> 문자 타입으로 변환

to_date( 문자, 형식 ) : 문자 타입 -> 날짜 타입으로 변환

to_number() : 

======================================================

create table board1 (
no number not null,
title varchar2(100) not null,
pass varchar2(100) not null,
writer varchar2(20),
hits number default 0,
rdate timestamp,
content varchar2(4000)
);

insert into board1 values( '1', 'test1', '1234', '이유리', '0', sysdate, '123' );	-- Oracle
insert into board1 values( '1', 'test1', '1234', '이유리', '0', now(), '123' );	-- MySQL

update board1 set title = 'test1004' where no = '1';



-- auto_increment => 시퀀스(sequence) :: 자동숫자증가
-- varchar -> varchar2 ; varchar(x), varchar1(x)
-- int -> number
-- unsigned -> 오라클 지원 안함
-- datetime -> timestamp

======================================================

create table studentinfo (
	seqid number not null,
	usrid varchar2(50) not null,
	usrpss varchar2(100) not null,
	usrnm varchar2(50) not null,
	usrgen char(1),
	usrbth date,
	regdt timestamp
);

insert into studentinfo
	values('1', 'st01', '1234', '홍길동', 'M', '2000-12-12', sysdate);

insert into studentinfo
	values('2', 'st02', '1234', '김영희', 'F', '2001-03-12', sysdate);


select if(usrgen ='M', '남', '여') from studentinfo;		- MySQL

		   (컬럽값, '비교값', 참, 거짓)
select decode(usrgen, 'M', '남', '여') from studentinfo;		-- Oracle


select usrbth
	,to_number ( to_char(sysdate,'yyyy'))  -
	,to_number (to_char(usrbth,'yyyy'))	
 from
	studentinfo info;























